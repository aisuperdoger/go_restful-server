// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.3
// source: yolov5_classify_life_jacket.proto

package yolov5_classify_life_jacket

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TestYolov5ClassifyLifeJacketServiceClient is the client API for TestYolov5ClassifyLifeJacketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TestYolov5ClassifyLifeJacketServiceClient interface {
	TestYolov5ClassifyLifeJacket(ctx context.Context, in *DatasetPath, opts ...grpc.CallOption) (*ResultJson, error)
}

type testYolov5ClassifyLifeJacketServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTestYolov5ClassifyLifeJacketServiceClient(cc grpc.ClientConnInterface) TestYolov5ClassifyLifeJacketServiceClient {
	return &testYolov5ClassifyLifeJacketServiceClient{cc}
}

func (c *testYolov5ClassifyLifeJacketServiceClient) TestYolov5ClassifyLifeJacket(ctx context.Context, in *DatasetPath, opts ...grpc.CallOption) (*ResultJson, error) {
	out := new(ResultJson)
	err := c.cc.Invoke(ctx, "/TestYolov5ClassifyLifeJacketService/testYolov5ClassifyLifeJacket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestYolov5ClassifyLifeJacketServiceServer is the server API for TestYolov5ClassifyLifeJacketService service.
// All implementations must embed UnimplementedTestYolov5ClassifyLifeJacketServiceServer
// for forward compatibility
type TestYolov5ClassifyLifeJacketServiceServer interface {
	TestYolov5ClassifyLifeJacket(context.Context, *DatasetPath) (*ResultJson, error)
	mustEmbedUnimplementedTestYolov5ClassifyLifeJacketServiceServer()
}

// UnimplementedTestYolov5ClassifyLifeJacketServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTestYolov5ClassifyLifeJacketServiceServer struct {
}

func (UnimplementedTestYolov5ClassifyLifeJacketServiceServer) TestYolov5ClassifyLifeJacket(context.Context, *DatasetPath) (*ResultJson, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestYolov5ClassifyLifeJacket not implemented")
}
func (UnimplementedTestYolov5ClassifyLifeJacketServiceServer) mustEmbedUnimplementedTestYolov5ClassifyLifeJacketServiceServer() {
}

// UnsafeTestYolov5ClassifyLifeJacketServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TestYolov5ClassifyLifeJacketServiceServer will
// result in compilation errors.
type UnsafeTestYolov5ClassifyLifeJacketServiceServer interface {
	mustEmbedUnimplementedTestYolov5ClassifyLifeJacketServiceServer()
}

func RegisterTestYolov5ClassifyLifeJacketServiceServer(s grpc.ServiceRegistrar, srv TestYolov5ClassifyLifeJacketServiceServer) {
	s.RegisterService(&TestYolov5ClassifyLifeJacketService_ServiceDesc, srv)
}

func _TestYolov5ClassifyLifeJacketService_TestYolov5ClassifyLifeJacket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatasetPath)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestYolov5ClassifyLifeJacketServiceServer).TestYolov5ClassifyLifeJacket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TestYolov5ClassifyLifeJacketService/testYolov5ClassifyLifeJacket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestYolov5ClassifyLifeJacketServiceServer).TestYolov5ClassifyLifeJacket(ctx, req.(*DatasetPath))
	}
	return interceptor(ctx, in, info, handler)
}

// TestYolov5ClassifyLifeJacketService_ServiceDesc is the grpc.ServiceDesc for TestYolov5ClassifyLifeJacketService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TestYolov5ClassifyLifeJacketService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TestYolov5ClassifyLifeJacketService",
	HandlerType: (*TestYolov5ClassifyLifeJacketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "testYolov5ClassifyLifeJacket",
			Handler:    _TestYolov5ClassifyLifeJacketService_TestYolov5ClassifyLifeJacket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yolov5_classify_life_jacket.proto",
}
